import time

from Abg.helpers.human_read import get_readable_time
from pyrogram.enums import ChatType, ParseMode
from pyrogram.types import (
    CallbackQuery,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto,
    Message,
)

from AsuX import Abishnoi
from AsuX import StartTime as boot
from AsuX.db.chats_db import add_served_chat
from AsuX.db.users_db import add_served_user

from . import PICS


@Abishnoi.on_cmd("start")
async def start_pm(cli: Abishnoi, message: Message):
    bot_uptime = int(time.time() - boot)
    uptime = get_readable_time(bot_uptime)
    if message.chat.type == ChatType.PRIVATE:
        await add_served_user(message.from_user.id)
    else:
        await add_served_chat(message.chat.id)
    upl = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥á üs·¥á  è·¥è·¥ú …¢·¥á è",
                    url=f"https://t.me/{(await cli.get_me()).username}?startgroup=new",
                ),
            ],
            [
                InlineKeyboardButton(
                    text=" ú·¥á ü·¥ò",
                    callback_data="help_",
                ),
                InlineKeyboardButton(
                    text="s·¥è·¥ú Ä·¥Ñ·¥á",
                    callback_data="h_source",
                ),
            ],
        ]
    )
    await message.reply_photo(
        PICS,
        caption=f"""ü•Ä  ú·¥á è {message.from_user.mention},

·¥õ ú…™s …™s {(await cli.get_me()).mention},
 …™ ·¥Ñ·¥Ä…¥ Íú∞·¥è Ä·¥Ñ·¥á ·¥úÍú±·¥á Ä ·¥õ·¥è ·¥ä·¥è…™…¥  ô·¥áÍú∞·¥è Ä·¥á ·¥†·¥è·¥õ·¥á ·¥Ä…¥ è·¥è…¥·¥á.\n…™“ì ·¥ús·¥á Ä  ü·¥á·¥Ä·¥†·¥á ·¥Ñ ú·¥Ä·¥õ ·¥†·¥è·¥õ·¥á ·¥ú…¥·¥Ö·¥è…¥·¥á ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ…™·¥Ñ\n·¥Ä ü…™·¥†·¥á s…™…¥·¥Ñ·¥á {uptime}""",
        reply_markup=upl,
    )


@Abishnoi.on_cb("close")
async def on_close_button(_, CallbackQuery):
    await CallbackQuery.answer()
    await CallbackQuery.message.delete()


@Abishnoi.on_cb("help_")
async def help_(cli: Abishnoi, query: CallbackQuery):
    await query.answer()
    await query.message.edit_text(
        text=f"""
<u><b>‚ûª  ú·¥á Ä·¥á …™s ·¥õ ú·¥á  ú·¥á ü·¥ò ·¥ç·¥á…¥·¥ú ·¥è“ì {(await cli.get_me()).mention} :</b></u>

‚Ä¢ /enter (/register, /participate): ·¥õ·¥è ·¥ò·¥Ä Ä·¥õ…™·¥Ñ…™·¥ò·¥Ä·¥õ·¥á …™…¥ …¢…™·¥†·¥á·¥Ä·¥°·¥Ä è. ·¥ç·¥Ä·¥ã·¥á s·¥ú Ä·¥á ·¥õ ú·¥á  ô·¥è·¥õ …™s s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥õ·¥è …¢·¥á·¥õ  Ä·¥á…¢…™s·¥õ·¥á Ä·¥á·¥Ö.

·¥Ä·¥Ö·¥ç…™…¥ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:
‚Ä¢ /startgiveaway (/startga) : s·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á …¢…™·¥†·¥á·¥Ä·¥°·¥Ä è.  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥ç·¥á·¥Ö…™·¥Ä ·¥õ·¥è s·¥á…¥·¥Ö …¢…™·¥†·¥á·¥Ä·¥°·¥Ä è s·¥õ·¥Ä Ä·¥õ ·¥ç·¥áss·¥Ä…¢·¥á ·¥°…™·¥õ ú ·¥õ·¥Ä…¢…¢·¥á·¥Ö ·¥ç·¥á·¥Ö…™·¥Ä (·¥°…™ ü ü ·¥è…¥ ü è ·¥° Ä·¥è·¥ã …™…¥  ô·¥è·¥õ ·¥ò·¥ç(·¥Ö·¥ç)).
·¥ús·¥á Ä ·¥Ö·¥á·¥ò·¥á…¥·¥Ö·¥á…¥·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös
‚Ä¢ /stopentry <·¥ò·¥ès·¥õ  ü…™…¥·¥ã>: s·¥õ·¥è·¥ò ·¥õ ú·¥á “ì·¥ú Ä·¥õ ú·¥á Ä ·¥á…¥·¥õ Ä…™·¥ás. ·¥Ñ ú·¥Ä…¥…¥·¥á ü “ì·¥è Ä ·¥° ú…™·¥Ñ ú  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥õ·¥è·¥ò ·¥õ ú·¥á ·¥á…¥·¥õ Ä…™·¥ás. ·¥ò·¥Äss ·¥õ ú·¥á ·¥ò·¥ès·¥õ  ü…™…¥·¥ã ·¥è“ì ·¥õ ú·¥á ·¥ò·¥ès·¥õ  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ to ·¥á·¥Ö…™·¥õ ·¥õ ú·¥á ·¥çs…¢ ·¥Ä…¥·¥Ö s·¥á·¥õ …™·¥õ ·¥Äs ·¥Ñ ü·¥ès·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á
‚Ä¢ /startvote <·¥ò·¥ès·¥õ  ü…™…¥·¥ã>: s·¥õ·¥Ä Ä·¥õ ·¥ú·¥ò ü·¥è·¥Ä·¥Ö…™…¥…¢ ·¥Ä ü ü ·¥õ ú·¥á ·¥ús·¥á Ä …™…¥“ì·¥è ·¥Ä…¥·¥Ö ·¥°…™ ü ü s·¥õ·¥Ä Ä·¥õ ·¥†·¥è·¥õ…™…¥…¢. ·¥ò·¥Äss ·¥õ ú·¥á ·¥ò·¥ès·¥õ  ü…™…¥·¥ã ·¥è“ì ·¥õ ú·¥á ·¥ò·¥ès·¥õ  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥á·¥Ö…™·¥õ ·¥õ ú·¥á ·¥çs…¢ ·¥Ä…¥·¥Ö s·¥á·¥õ …™·¥õ ·¥Äs ·¥Ñ ü·¥ès·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á. …¥·¥è·¥õ …¥·¥á·¥Ñ·¥áss·¥Ä Ä è ·¥õ·¥è …¢…™·¥†·¥á ·¥ò·¥ès·¥õ  ü…™…¥·¥ã.
·¥ò·¥ès·¥õ  ü…™…¥·¥ã (“ì·¥è Ä ·¥Ñ ú·¥Ä…¥…¥·¥á üs) = ·¥ç·¥áss·¥Ä…¢·¥á  ü…™…¥·¥ã (“ì·¥è Ä ·¥Ñ ú·¥Ä·¥õs)
‚Ä¢ /stopgiveaway (/stopga) : s·¥õ·¥è·¥ò ·¥õ ú·¥á …¢…™·¥†·¥á·¥Ä·¥°·¥Ä è. ·¥Ñ ú·¥Ä…¥…¥·¥á ü “ì·¥è Ä ·¥° ú…™·¥Ñ ú  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥õ·¥è·¥ò ·¥õ ú·¥á …¢…™·¥†·¥á·¥Ä·¥°·¥Ä è. ·¥°…™ ü ü ·¥Ä üs·¥è ·¥Ñ ü·¥ès·¥á ·¥†·¥è·¥õ…™…¥…¢ ·¥Ä·¥õ s·¥Ä·¥ç·¥á ·¥õ…™·¥ç·¥á.


""",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton(text=" ô·¥Ä·¥Ñ·¥ã", callback_data="AsuX_home")]]
        ),
        parse_mode=ParseMode.HTML,
    )


@Abishnoi.on_cb("source_")
async def source_(cli: Abishnoi, query: CallbackQuery):
    await query.answer()
    await query.message.edit_text(
        text=f"""
<u><b>‚ûª  ú·¥á Ä·¥á …™s ·¥õ ú·¥á s·¥è·¥ú Ä·¥Ñ·¥á ·¥è“ì {Abishnoi.mention} :</b></u>

‚Ä¢ ·¥° Ä…™·¥õ·¥õ·¥á…¥ …™…¥ ·¥© è·¥õ ú·¥è…¥ ·¥°…™·¥õ ú ·¥õ ú·¥á  ú·¥á ü·¥© ·¥è“ì : [·¥ò è Ä·¥è…¢ Ä·¥Ä·¥ç](https://github.com/pyrogram/pyrogram), [·¥Ä ô…¢](https://github.com/Abishnoi69/Abg) ·¥Ä…¥·¥Ö [·¥ç·¥è…¥…¢·¥è](https://cloud.mongodb.com/) ·¥Äs ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á.
‚Ä¢  ú·¥á Ä·¥á …™s ·¥ç è s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á : [{Abishnoi.name}](https://github.com/Abishnoi69/AsuX)
""",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton(text=" ô·¥Ä·¥Ñ·¥ã", callback_data="AsuX_home")]]
        ),
    )


@Abishnoi.on_cb("AsuX_home")
async def AsuX_home(cli: Abishnoi, query: CallbackQuery):
    await query.answer()
    bot_uptime = int(time.time() - boot)
    uptime = get_readable_time(bot_uptime)
    upl = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥á üs·¥á  è·¥è·¥ú …¢·¥á è",
                    url=f"https://t.me/{(await cli.get_me()).username}?startgroup=new",
                ),
            ],
            [
                InlineKeyboardButton(
                    text=" ú·¥á ü·¥ò",
                    callback_data="help_",
                ),
                InlineKeyboardButton(
                    text="s·¥è·¥ú Ä·¥Ñ·¥á",
                    callback_data="source_",
                ),
            ],
        ]
    )
    await query.edit_message_media(
        InputMediaPhoto(
            media=PICS,
            caption=f"""ü•Ä  ú·¥á è {query.from_user.mention},

·¥õ ú…™s …™s {(await cli.get_me()).mention},
  …™ ·¥Ñ·¥Ä…¥ Íú∞·¥è Ä·¥Ñ·¥á ·¥úÍú±·¥á Ä ·¥õ·¥è ·¥ä·¥è…™…¥  ô·¥áÍú∞·¥è Ä·¥á ·¥†·¥è·¥õ·¥á ·¥Ä…¥ è·¥è…¥·¥á.\n…™“ì ·¥ús·¥á Ä  ü·¥á·¥Ä·¥†·¥á ·¥Ñ ú·¥Ä·¥õ ·¥†·¥è·¥õ·¥á ·¥ú…¥·¥Ö·¥è…¥·¥á ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ…™·¥Ñ\n·¥Ä ü…™·¥†·¥á s…™…¥·¥Ñ·¥á {uptime}""",
        ),
        reply_markup=upl,
    )
